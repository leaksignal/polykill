/* tslint:disable */
/* eslint-disable */
/**
 * LeakSignal LeakScanner
 * API for LeakSignal LeakScanner
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: max@leaksignal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RiskItemAnalysisSummaryBlockListAnalysis
 */
export interface RiskItemAnalysisSummaryBlockListAnalysis {
    /**
     * 
     * @type {string}
     * @memberof RiskItemAnalysisSummaryBlockListAnalysis
     */
    timestamp?: string;
    /**
     * 
     * @type {string}
     * @memberof RiskItemAnalysisSummaryBlockListAnalysis
     */
    status?: RiskItemAnalysisSummaryBlockListAnalysisStatusEnum;
}


/**
 * @export
 */
export const RiskItemAnalysisSummaryBlockListAnalysisStatusEnum = {
    Clear: 'CLEAR',
    Blocked: 'BLOCKED'
} as const;
export type RiskItemAnalysisSummaryBlockListAnalysisStatusEnum = typeof RiskItemAnalysisSummaryBlockListAnalysisStatusEnum[keyof typeof RiskItemAnalysisSummaryBlockListAnalysisStatusEnum];


/**
 * Check if a given object implements the RiskItemAnalysisSummaryBlockListAnalysis interface.
 */
export function instanceOfRiskItemAnalysisSummaryBlockListAnalysis(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RiskItemAnalysisSummaryBlockListAnalysisFromJSON(json: any): RiskItemAnalysisSummaryBlockListAnalysis {
    return RiskItemAnalysisSummaryBlockListAnalysisFromJSONTyped(json, false);
}

export function RiskItemAnalysisSummaryBlockListAnalysisFromJSONTyped(json: any, ignoreDiscriminator: boolean): RiskItemAnalysisSummaryBlockListAnalysis {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function RiskItemAnalysisSummaryBlockListAnalysisToJSON(value?: RiskItemAnalysisSummaryBlockListAnalysis | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'timestamp': value.timestamp,
        'status': value.status,
    };
}

